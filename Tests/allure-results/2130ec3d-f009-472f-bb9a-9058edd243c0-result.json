{"name": "test_valid_login_002", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"user-name\"]\"}\n  (Session info: chrome=131.0.6778.140); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x005034A3+25059]\n\t(No symbol) [0x0048CEA4]\n\t(No symbol) [0x0036BEC3]\n\t(No symbol) [0x003AFD86]\n\t(No symbol) [0x003AFFCB]\n\t(No symbol) [0x003ED952]\n\t(No symbol) [0x003D1F44]\n\t(No symbol) [0x003EB51E]\n\t(No symbol) [0x003D1C96]\n\t(No symbol) [0x003A3FAC]\n\t(No symbol) [0x003A4F3D]\n\tGetHandleVerifier [0x007F5613+3113811]\n\tGetHandleVerifier [0x0080A2DA+3199002]\n\tGetHandleVerifier [0x00802AB2+3168242]\n\tGetHandleVerifier [0x005A3310+680016]\n\t(No symbol) [0x004957ED]\n\t(No symbol) [0x00492A98]\n\t(No symbol) [0x00492C35]\n\t(No symbol) [0x00485890]\n\tBaseThreadInitThunk [0x75675D49+25]\n\tRtlInitializeExceptionChain [0x778BCEBB+107]\n\tRtlGetAppContainerNamedObjectPath [0x778BCE41+561]", "trace": "self = <Tests.Test_Login.Test_Login object at 0x000001303C1965D0>\nconfig = {'browser_name': 'chrome', 'password': 'secret_sauce', 'url': 'https://www.saucedemo.com/', 'username': 'standard_user'}\n\n    def test_valid_login_002(self, config):\n        # To verify whether the user is able to login to the Application with valid credentials\n        # and also verify whether the user is taken to 'Products' page post successful login.\n        loginpage = LoginPage(self.driver)\n        log = self.getlogger()\n        log.info(\"Testcase_001_validate the Login with valid credentials\")\n>       loginpage.get_name().send_keys(config['username'])\n\nTest_Login.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\PageObjects\\LoginPage.py:15: in get_name\n    return self.driver.find_element(*LoginPage.name)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001303C1D1E80>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x778BCEBB+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x778BCE41+561]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"user-name\"]\"}\nE         (Session info: chrome=131.0.6778.140); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x005034A3+25059]\nE       \t(No symbol) [0x0048CEA4]\nE       \t(No symbol) [0x0036BEC3]\nE       \t(No symbol) [0x003AFD86]\nE       \t(No symbol) [0x003AFFCB]\nE       \t(No symbol) [0x003ED952]\nE       \t(No symbol) [0x003D1F44]\nE       \t(No symbol) [0x003EB51E]\nE       \t(No symbol) [0x003D1C96]\nE       \t(No symbol) [0x003A3FAC]\nE       \t(No symbol) [0x003A4F3D]\nE       \tGetHandleVerifier [0x007F5613+3113811]\nE       \tGetHandleVerifier [0x0080A2DA+3199002]\nE       \tGetHandleVerifier [0x00802AB2+3168242]\nE       \tGetHandleVerifier [0x005A3310+680016]\nE       \t(No symbol) [0x004957ED]\nE       \t(No symbol) [0x00492A98]\nE       \t(No symbol) [0x00492C35]\nE       \t(No symbol) [0x00485890]\nE       \tBaseThreadInitThunk [0x75675D49+25]\nE       \tRtlInitializeExceptionChain [0x778BCEBB+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x778BCE41+561]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "attachments": [{"name": "log", "source": "e9a77b44-935c-411f-b375-391a7c06d4ce-attachment.txt", "type": "text/plain"}], "start": 1734409425886, "stop": 1734409435974, "uuid": "62f9a2b8-0ec8-4b76-b4ed-02d4e6874121", "historyId": "8e69bed46002a511b292577cda079984", "testCaseId": "8e69bed46002a511b292577cda079984", "fullName": "Test_Login.Test_Login#test_valid_login_002", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "suite", "value": "Test_Login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "Vasanthi_PC"}, {"name": "thread", "value": "17348-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Login"}]}